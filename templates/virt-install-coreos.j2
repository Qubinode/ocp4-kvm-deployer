#!/bin/bash

mac_address=$(sudo virsh net-dumpxml {{ libvirt_network_name }}|awk '/host mac/ {print $0}'| awk '/{{ vm_name }}/ {print $2}'|grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}')

args='nomodeset '
args+='coreos.inst=yes '
args+='coreos.inst.install_dev=vda '
args+='coreos.inst.image_url={{ rhcos_metal_bios }} '
args+='coreos.inst.ignition_url={{ rhcos_ignition }} '
args+='ip={{ vm_ip }}::{{ ocp4_nat_gateway }}:{{ mask }}:{{ vm_name }}.{{ cluster_name }}.{{ ocp4_cluster_domain }}:ens3:none nameserver={{ dns_server_ip }} '
args+='rd.neednet=1'

{% if performance_disk %}
qemu_mode=falloc
{% else %}
qemu_mode=metadata
{% endif %}

# {{ vm_type }} Node
sudo qemu-img create -f qcow2 -o preallocation=$qemu_mode {{ kvm_host_libvirt_dir }}/{{ vm_name }}-vda.qcow2 {{ hd_size }}
{% for item in extra_storage %}
{%- if item.enable %}
sudo qemu-img create -f qcow2 -o preallocation=$qemu_mode {{ kvm_host_libvirt_dir }}/{{ vm_name }}-{{ item.name }}.qcow2 {{ item.size }}
{% endif %}
{% endfor %}


sudo virt-install --name {{ vm_name }} \
  --disk {{ kvm_host_libvirt_dir }}/{{ vm_name }}-vda.qcow2,bus=virtio,format=qcow2 \
{% for item in extra_storage %}
{%- if item.enable %}
  --disk {{ kvm_host_libvirt_dir }}/{{ vm_name }}-{{ item.name }}.qcow2,bus=virtio,format=qcow2 \
{% endif %}
{% endfor %}
  --memory {{ memory_size }} \
  --vcpus {{ cpu_size }} \
  --os-type generic \
  --network network={{ libvirt_network_name }},mac=${mac_address},model=virtio --noreboot --noautoconsole\
  --location {{ virtinstall_dir }} \
  --rng /dev/urandom \
  --extra-args="${args}"
