---
- name: deploy qubinode-ocp4-status script
  template:
    src: templates/qubinode-ocp4-status.j2
    dest: /usr/local/bin/qubinode-ocp4-status
    group: "{{ local_user_account }}"
    owner: "{{ local_user_account }}"
    mode: u=rwx,g=rx,o=rx
  become: yes
  tags: [ complete_install, check_cluster_status, status_script ]

- name: check the bootstrap status
  command: |
    /usr/bin/timeout 40 /usr/local/bin/openshift-install wait-for bootstrap-complete --dir "{{ openshift_install_dir }}" --log-level debug
  register: bootstrap_complete
  changed_when: false
  ignore_errors: yes
  tags: [ deploy_nodes, bootstrap, postinstall, check_cluster_status, complete_install ]

- name: set bootstrap status
  set_fact:
    bootstrap_complete: "{{ true if bootstrap_complete.stderr is defined and bootstrap_complete.stderr.find('It is now safe to remove the bootstrap resources') != -1 else false }}"
  tags: [ deploy_nodes, bootstrap, postinstall, check_cluster_status, complete_install ]

- name: check the cluster install status
  command: |
    /usr/bin/timeout 40 /usr/local/bin/openshift-install wait-for install-complete --dir "{{ openshift_install_dir }}" --log-level debug
  register: install_complete
  ignore_errors: yes
  changed_when: false
  when: bootstrap_complete|bool
  tags: [ deploy_nodes, bootstrap, postinstall, check_cluster_status, complete_install ]

- name: set openshift-install status
  set_fact:
    cluster_install_status: "{{ true if install_complete.stderr is defined and install_complete.stderr.find('Login to the console with user:') != -1 else false }}"
  tags: [ deploy_nodes, bootstrap, postinstall, check_cluster_status, complete_install ]

- name: check cluster operators status
  command: |
    /usr/local/bin/qubinode-ocp4-status
  register: cluster_operators_status
  changed_when: false
  ignore_errors: yes
  environment:
    KUBECONFIG: "{{ openshift_install_dir }}/auth/kubeconfig"
  when: bootstrap_complete is defined and cluster_install_status|bool
  tags: [ deploy_nodes, bootstrap, postinstall, check_cluster_status, complete_install ]

- name: set cluster operators status
  set_fact:
    is_cluster_deployed: "{{ false if cluster_operators_status.stdout is not defined else true }}"
    is_cluster_up: "{{ true if cluster_operators_status.stdout is defined and cluster_operators_status.stdout.find('All cluster operators are up') != -1 else false }}"
    is_cluster_timeout: "{{ true if cluster_operators_status.stdout is defined and cluster_operators_status.stdout.find('Timeout waiting for all cluster operators to come up') != -1 else false }}"
  tags: [ deploy_nodes, bootstrap, postinstall, check_cluster_status, complete_install ]

- name: set cluster deployed message
  set_fact:
    cluster_deployed_msg: "deployed"
  when: is_cluster_deployed|bool
  tags: [ deploy_nodes, bootstrap, postinstall, check_cluster_status, complete_install ]

- name: show variable status
  debug:
    msg:
      - "bootstrap_complete {{ bootstrap_complete }}"
      - "is_cluster_up {{ is_cluster_up }}"
      - "is_cluster_timeout {{ is_cluster_timeout }}"
      - "cluster_operators_status {{ cluster_operators_status }}"
      - "is_cluster_deployed {{ is_cluster_deployed }}"
      - "cluster_deployed_msg {{ cluster_deployed_msg }}"
  tags: [ deploy_nodes, bootstrap, postinstall, check_cluster_status, complete_install ]

- name: fail if bootstrap process was attempted 
  fail:
    msg: "It appears an installation of the cluster has been attempted. Run /usr/local/bin/qubinode-ocp4-status for more details."
  when: bootstrap_complete|bool and not is_cluster_up|bool
  tags: [ complete_install, check_cluster_status ]

- name: fail when the cluster status timed out
  fail:
    msg: "OCP4 Cluster is deployed but it appears not all operators are up! Run /usr/local/bin/qubinode-ocp4-status for more details."
  when: is_cluster_timeout|bool and not is_cluster_up|bool
  tags: [ complete_install, check_cluster_status ]

- name: show the status of the ocp4 cluster
  debug:
    msg: "The OCP4 cluster is {{ cluster_deployed_msg }}."
  tags: [ deploy_nodes, bootstrap, postinstall, check_cluster_status, complete_install ]
