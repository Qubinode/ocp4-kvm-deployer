---
- name: Generate a updated inventory of current cluster nodes
  import_tasks: generate_inventory.yml

# eventually going to remove shutting down nodes with shutdown command
# and just rely an the virt module to shutdown the VM as it appears
# shutdown with the command module does not work as well as virt
- name: try to shutdown all nodes with the shutdown command
  when: "'hostname_prefix' in running_vms"
  tags: shutdown
  block:
    - name: SHUTDOWN CLUSTER - backup etcd on {{ control_ocp4_nodes.stdout_lines | first }}
      vars:
        node: "{{ control_ocp4_nodes.stdout_lines | first }}"
        node_name: "{{ node.split()[0] }}"
        vm_ipaddr: "{{ node.split()[1] | lower }}"
        vm_name: "{{ node_name.split('.')[0] | lower }}"
      command: /usr/local/bin/cluster-backup.sh /var/home/core/assets/backup
      register: backup_etcd
      delegate_to: "{{ vm_name }}"
      ignore_unreachable: yes
      ignore_errors: yes
      when: vm_name in running_vms.list_vms and control_ocp4_nodes
      become: yes

    - name: SHUTDOWN CLUSTER - Compute Nodes
      vars:
        vm_fqdn: "{{ item.split()[0] | lower }}"
        vm_name: "{{ vm_fqdn.split('.')[0] | lower }}"
      virt:
        name: "{{ vm_name }}"
        state: shutdown
      register: shutdown_computes
      loop: "{{ compute_ocp4_nodes.stdout_lines }}"
      loop_control:
        label: "Shutting down node {{ vm_name }}"
      when: vm_name in running_vms.list_vms

    - name: SHUTDOWN CLUSTER - Wait for Compute Nodes shutdown
      vars:
        vm_fqdn: "{{ item.split()[0] | lower }}"
        vm_name: "{{ vm_fqdn.split('.')[0] | lower }}"
      virt:
        command: list_vms
        state: shutdown
      register: shutdown_compute_vms      
      until: vm_name in shutdown_compute_vms.list_vms
      retries: 120
      delay: 30
      loop: "{{ compute_ocp4_nodes.stdout_lines }}"
      loop_control:
        label: "Waiting on node {{ vm_name }} to shutdown"
      when: shutdown_computes and shutdown_computes.changed

    - name: SHUTDOWN CLUSTER - shutdown control nodes
      vars:
        vm_fqdn: "{{ item.split()[0] | lower }}"
        vm_name: "{{ vm_fqdn.split('.')[0] | lower }}"
      virt:
        name: "{{ vm_name }}"
        state: shutdown
      register: shutdown_control
      loop: "{{ control_ocp4_nodes.stdout_lines }}"
      loop_control:
        label: "Shutting down node {{ vm_name }}"

    - name: SHUTDOWN CLUSTER - wait for control nodes to shutdown
      vars:
        vm_fqdn: "{{ item.split()[0] | lower }}"
        vm_name: "{{ vm_fqdn.split('.')[0] | lower }}"
      virt:
        command: list_vms
        state: shutdown
      register: shutdown_control_vms      
      until: vm_name in shutdown_control_vms.list_vms
      retries: 120
      delay: 30
      loop: "{{ control_ocp4_nodes.stdout_lines }}"
      loop_control:
        label: "Waiting on node {{ vm_name }} to shutdown"