---
# tasks file for ocp4-kvm-deployer
- name: Setting Ingress information and machine configuration for bootstrap nodes and other machines
  set_fact:
    tmp_api: "[ '{{ bootstrap_ip }}:6443' ]"
    tmp_api_listen: "[ '{{ listen_address }}:6443' ]"
    tmp_ingress_http: "[]"
    tmp_ingress_http_listen: "['{{ listen_address }}:80', '{{ ocp4_nat_gateway }}:80' ]"
    tmp_ingress_https: "[]"
    tmp_ingress_https_listen: "['{{ listen_address }}:443', '{{ ocp4_nat_gateway }}:443' ]"
    tmp_machine_config_server: "[ '{{ bootstrap_ip }}:22623' ]"
    tmp_machine_config_server_listen: "['{{ listen_address }}:22623', '{{ ocp4_nat_gateway }}:22623']"
  tags: [ setup, deploy_nodes, rhcos, bootstrap, idm]

- name: Setting Ingress information and machine configuration for internal API Server
  set_fact:
    tmp_api: "{{ tmp_api }}  + [ '{{ ocp4_nat_gateway }}:6443' ]"
    tmp_api_listen: "{{ tmp_api_listen }}  + [ '{{ ocp4_nat_gateway }}:6443' ]"
  ignore_errors: false
  tags: [ setup, deploy_nodes, rhcos, bootstrap, idm]

- name: Setting Ingress information and machine configuration for master nodes
  set_fact:
    tmp_api: "{{ tmp_api }}  + [ 'master-{{ item }}={{ ocp4_nat_subnet.split('.')[:3] | join('.') }}.{{ master_ip_octet|int + item|int }}:6443' ]"
    tmp_machine_config_server: "{{ tmp_machine_config_server }} + [ 'master-{{ item }}={{ ocp4_nat_subnet.split('.')[:3] | join('.') }}.{{ master_ip_octet|int + item|int }}:22623' ]"
  with_sequence: start=0 end="{{ master_count|int - 1 }}" stride=1
  ignore_errors: false
  tags: [ setup, deploy_nodes, rhcos, bootstrap, idm]

- name: Setting Ingress information and machine configuration for compute nodes
  set_fact:
    tmp_ingress_http: "{{ tmp_ingress_http }} + [ 'compute-{{ item }}={{ ocp4_nat_subnet.split('.')[:3] | join('.') }}.{{ compute_ip_octet|int + item|int }}:80' ]"
    tmp_ingress_https: "{{ tmp_ingress_https }} + [ 'compute-{{ item }}={{ ocp4_nat_subnet.split('.')[:3] | join('.') }}.{{ compute_ip_octet|int + item|int }}:443' ]"
  with_sequence: start=0 end="{{ compute_count|int - 1 }}" stride=1
  ignore_errors: false
  tags: [ setup, deploy_nodes, rhcos, bootstrap, idm]

- name: setup Ingress information and machine configuration variables
  set_fact:
    lb_api: "{{ tmp_api | join(',') }}"
    lb_api_listen: "{{ tmp_api_listen | join(',') }}"
    lb_ingress_http: "{{ tmp_ingress_http | join(',') }}"
    lb_ingress_http_listen: "{{ tmp_ingress_http_listen | join(',') }}"
    lb_ingress_https: "{{ tmp_ingress_https | join(',') }}"
    lb_ingress_https_listen: "{{ tmp_ingress_https_listen | join(',') }}"
    lb_machine_config_server: "{{ tmp_machine_config_server | join(',') }}"
    lb_machine_config_server_listen: "{{ tmp_machine_config_server_listen | join(',') }}"
  tags: [ setup, deploy_nodes, rhcos, bootstrap, idm]

- name: get {{ ocp4_lb_container }} container info
  shell: podman inspect -f {%raw%}"{{ .State.Status }}"{%endraw%} {{ ocp4_lb_container }}
  register: container_result
  failed_when: false
  changed_when: false
  tags: [ setup, deploy_nodes, rhcos, bootstrap, idm, lb, startup]

- name: set {{ ocp4_lb_container }} container state
  set_fact:
    container_exited: "{{ true if container_result.stdout is defined and container_result.stdout == 'exited' else false }}"
    container_running: "{{ true if container_result.stdout is defined and container_result.stdout == 'running' else false }}"
    container_exist: "{{ true if container_result.stdout is defined and container_result.stdout != '' else false }}"
  tags: [ setup, deploy_nodes, rhcos, bootstrap, idm, lb, startup]

- name: check if Loadbalancer SystemD service exists
  stat:
    path: "/etc/systemd/system/{{ lb_name }}.service"
  register: lb_service
  tags: [ setup, deploy_nodes, rhcos, bootstrap, idm, lb, startup]


- name: ensure the jq command is installed from ocp4 repos
  shell: |
    if ! rpm -qa | grep -q 'jq-'
    then
        sudo subscription-manager repos --enable rhel-7-server-ose-"{{ ocp4_dependencies_version }}"-rpms
        rpmdir=$(mktemp -d)
        sudo yumdownloader --resolve --destdir=${rpmdir} oniguruma jq
        sudo subscription-manager repos --disable rhel-7-server-ose-"{{ ocp4_dependencies_version }}"-rpms
        sudo yum -y install ${rpmdir}/*.rpm
     fi
  changed_when: jq_command_install.stdout != ""
  register: jq_command_install
  tags: [ deploy_nodes, rhcos, postinstall ]
