---
# tasks file for ocp4_kvm_deployer

- set_fact:
    ocp4_nodes: []

- name: set compute_node_count variable
  set_fact:
    compute_node_count: "{{ 1 if compute_count|int == 0 else compute_count }}"

- name: remove OpenShift 4 bootstrap webserver
  import_role:
    name: ocp4-bootstrap-webserver
    tasks_from: main.yml
  tags: [ webserver ]

- name: Remove load balancer container
  import_role:
    name: openshift-4-loadbalancer
    tasks_from: destroy.yml
  vars:
    lb_name: "{{ ocp4_lb_container }}"
    lb_api: "{{ tmp_api | join(',') }}"
    lb_api_listen: "{{ tmp_api_listen | join(',') }}"
    lb_ingress_http: "{{ tmp_ingress_http | join(',') }}"
    lb_ingress_http_listen: "{{ tmp_ingress_http_listen | join(',') }}"
    lb_ingress_https: "{{ tmp_ingress_https | join(',') }}"
    lb_ingress_https_listen: "{{ tmp_ingress_https_listen | join(',') }}"
    lb_machine_config_server: "{{ tmp_machine_config_server | join(',') }}"
    lb_machine_config_server_listen: "{{ tmp_machine_config_server_listen | join(',') }}"
  tags: [ lb ]

- name: remove the ocp4 installation directory {{ openshift_install_dir }}
  file:
    path: "{{ openshift_install_dir }}"
    state: absent
  tags: [ lb ]

- name: include build_cluster_nodes_profile.yml
  include_tasks: build_cluster_nodes_profile.yml
  loop: "{{ ocp4_instances }}"
  loop_control:
    loop_var: outer_item
    label: outer_item.name
  tags: [ deploy_nodes, rhcos, node_profile, add_computes ]


- name: list running libvirt vms
  virt:
    command: list_vms
    state: running
  register: running_vms
  tags: [ deploy_nodes, rhcos, bootstrap ]

- name: shutdown ocp4 nodes
  vars:
    vm_name: "{{ item }}"
  virt:
    name: "{{ vm_name }}"
    command: destroy
  register: shutdown_vms
  when: vm_name in running_vms.list_vms
  loop: "{{ ocp4_nodes }}"
  delay: 10
  tags: [ deploy_nodes, rhcos ]

- name: include wait_for_vm_shutdown.yml
  include_tasks: wait_for_vm_shutdown.yml
  loop: "{{ ocp4_nodes }}"
  loop_control:
    loop_var: vm_name
    label: vm_name
  when: shutdown_vms.changed
  tags: [ deploy_nodes, rhcos, rhcos_wait ]

- name: list all libvirt vms
  virt:
    command: list_vms
  register: all_vms
  tags: [ deploy_nodes, rhcos, bootstrap ]

- name: show me the vm names
  vars:
    vm_name: "{{ item }}"
  debug:
    msg: "name: {{ vm_name }}"
  loop: "{{ ocp4_nodes }}"
  when: vm_name in all_vms.list_vms
  tags: [ deploy_nodes, rhcos ]

- name: destroy ocp4 node
  vars:
    vm_name: "{{ item }}"
  virt:
    name: "{{ vm_name }}"
    command: undefine
  when: vm_name in all_vms.list_vms
  loop: "{{ ocp4_nodes }}"
  delay: 10
  tags: [ deploy_nodes, rhcos ]

- name: import tasks configure_dns_entries.yml
  vars:
    dns_teardown: yes
  import_tasks: configure_dns_entries.yml
  tags: [ deploy_nodes, idm ]

- name: get a list of all libvirt networks
  virt_net:
    command: list_nets
  register: libvirt_nets
  tags: [ deploy_nodes, libvirt_net ]
  

- name: ensure {{ virtinstall_dir }} is removed
  file:
    path: "{{ virtinstall_dir }}"
    state: absent
  tags: [ deploy_nodes, rhcos ]
  ignore_errors: yes
  when: not use_external_bridge | bool 

- name: stop the ocp4 nat libvirt network
  virt_net:
    state: inactive
    name: "{{ item }}"
  loop: "{{ libvirt_nets.list_nets }}"
  when: item == libvirt_network_name and not use_external_bridge | bool 
  tags: [ deploy_nodes, libvirt_net ]

- name: ensure {{ openshift_install_dir }} is removed
  file:
    path: "{{ openshift_install_dir }}"
    state: absent
  tags: [ deploy_nodes, rhcos ]

- name: remove the ocp4 nat libvirt network
  virt_net:
    command: undefine
    name: "{{ item }}"
  loop: "{{ libvirt_nets.list_nets }}"
  when: item == libvirt_network_name
  tags: [ deploy_nodes, libvirt_net ]

- name: removing using kubeconfig
  file:
    path: "/home/{{ local_user_account }}/.kube/config"
    state: absent
  tags: [ lb ]
