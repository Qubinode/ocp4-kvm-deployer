---
# tasks file for ocp4-kvm-deployer
- name: Remove load balancer container
  import_role:
    name: openshift-4-loadbalancer
    tasks_from: destroy.yml
  vars:
    lb_name: "{{ ocp4_lb_container }}"
    lb_api: "{{ tmp_api | join(',') }}"
    lb_api_listen: "{{ tmp_api_listen | join(',') }}"
    lb_ingress_http: "{{ tmp_ingress_http | join(',') }}"
    lb_ingress_http_listen: "{{ tmp_ingress_http_listen | join(',') }}"
    lb_ingress_https: "{{ tmp_ingress_https | join(',') }}"
    lb_ingress_https_listen: "{{ tmp_ingress_https_listen | join(',') }}"
    lb_machine_config_server: "{{ tmp_machine_config_server | join(',') }}"
    lb_machine_config_server_listen: "{{ tmp_machine_config_server_listen | join(',') }}"
  tags: [ lb ]

- name: remove OpenShift 4 bootstrap webserver
  import_role:
    name: ocp4-bootstrap-webserver
    tasks_from: tear_down.yml
  tags: [ webserver ]

- name: remove the ocp4 installation directory {{ openshift_install_dir }}
  file:
    path: "{{ openshift_install_dir }}"
    state: absent
  tags: [ lb ]

- name: import tasks build_vm_list.yml
  import_tasks: build_vm_list.yml
  tags: [ deploy_nodes, rhcos ]

- name: list all libvirt vms
  virt:
    command: list_vms
    state: running
  register: running_vms
  tags: [ deploy_nodes, rhcos, bootstrap ]

- name: shutdown ocp4 nodes
  vars:
    vm_name: "{{ item }}"
  virt:
    name: "{{ vm_name }}"
    command: destroy
  register: shutdown_vms
  when: vm_name in running_vms.list_vms
  loop: "{{ ocp4_nodes }}"
  delay: 10
  tags: [ deploy_nodes, rhcos ]

- name: include wait_for_vm_shutdown.yml
  include_tasks: wait_for_vm_shutdown.yml
  loop: "{{ ocp4_nodes }}"
  loop_control:
    loop_var: vm_name
    label: vm_name
  when: shutdown_vms.changed
  tags: [ deploy_nodes, rhcos, rhcos_wait ]

- name: destroy ocp4 node
  vars:
    vm_name: "{{ item }}"
  virt:
    name: "{{ vm_name }}"
#    #state: destroyed
    command: undefine
  when: vm_name in all_vms.list_vms
  loop: "{{ ocp4_nodes }}"
  delay: 10
  tags: [ deploy_nodes, rhcos ]

- name: import tasks configure_dns_entries.yml
  vars:
    dns_teardown: yes
  import_tasks: configure_dns_entries.yml
  tags: [ deploy_nodes, idm ]

- name: get a list of all libvirt networks
  virt_net:
    command: list_nets
  register: libvirt_nets
  tags: [ deploy_nodes, libvirt_net ]

- name: ensure {{ virtinstall_dir }} is removed
  file:
    path: "{{ virtinstall_dir }}"
    state: absent
  tags: [ deploy_nodes, rhcos ]
  ignore_errors: yes

- name: ensure {{ openshift_install_dir }} is removed
  file:
    path: "{{ openshift_install_dir }}"
    state: absent
  tags: [ deploy_nodes, rhcos ]

- name: import configure-local-storage.yml
  import_tasks: configure-local-storage.yml
  tags: [ localstorage ]

- name: stop the ocp4 nat libvirt network
  virt_net:
    state: inactive
    name: "{{ item }}"
  loop: "{{ libvirt_nets.list_nets }}"
  when: item == libvirt_network_name
  tags: [ deploy_nodes, libvirt_net ]

- name: remove the ocp4 nat libvirt network
  virt_net:
    command: undefine
    name: "{{ item }}"
  loop: "{{ libvirt_nets.list_nets }}"
  when: item == libvirt_network_name
  tags: [ deploy_nodes, libvirt_net ]
