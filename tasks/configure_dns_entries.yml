---
- name: fail when idm server ip address isn't provided
  fail: msg="Bailing out. this play requires 'idm_server_ipaddr'  your idm server ip"
  when: idm_server_ipaddr |length == 0
  tags: [idm, worker_dns, master_dns, bootstrap_dns, api_dns, etcd_dns, wildcard_dns]

# NOTE: this may not be needed, uncomment if role fails
#- name: check DNS entries
#  include_tasks: check_dns_entries.yml
#  tags: [idm, worker_dns, master_dns]

- name: add bootstrap to dns forward zone
  vars:
    ip: "{{ ocp4_nat_gateway.split('.')[:3] | join('.') }}.2"
    name: bootstrap
    ptr: 2
  set_fact:
    records: "{{ records|default([]) + [ {'hostname': name, 'ipaddr': ip, 'ptr_record': ptr} ] }}"
  tags: [bootstrap_dns]

- name: add bootstrap to reverse forward zone
  vars:
    ip: "{{ ocp4_nat_gateway.split('.')[:3] | join('.') }}.2"
    name: "bootstrap"
    ptr: 2
  set_fact:
    reverse_records: "{{ reverse_records|default([]) + [ {'hostname': name, 'ipaddr': ip, 'ptr_record': ptr} ] }}"
  tags: [bootstrap_dns]

- name: add api-int to dns records list
  vars:
    ip: "{{ ocp4_nat_gateway.split('.')[:3] | join('.') }}.1"
    name: api-int
    ptr: 1
  set_fact:
    records: "{{ records|default([]) + [ {'hostname': name, 'ipaddr': ip, 'ptr_record': ptr} ] }}"
  tags: [api_dns]

- name: add api to dns records list
  vars:
    ip: "{{ kvm_host_ip }}"
    name: api
    ptr: 1
  set_fact:
    records: "{{ records|default([]) + [ {'hostname': name, 'ipaddr': ip, 'ptr_record': ptr} ] }}"
  tags: [api_dns]

- name: set master nodes forward zone records
  vars:
    ip: "{{ ocp4_nat_gateway.split('.')[:3] | join('.') }}.{{ master_ip_octet|int + item|int }}"
    name: "master-{{ item }}"
    ptr: "{{ master_ip_octet|int + item|int }}"
  set_fact:
    records: "{{ records|default([]) + [ {'hostname': name, 'ipaddr': ip, 'ptr_record': ptr} ] }}"
  with_sequence: start=0 end="{{ master_count|int - 1 }}" stride=1
  tags: [master_dns]

- name: set master nodes reverse zone records
  vars:
    ip: "{{ ocp4_nat_gateway.split('.')[:3] | join('.') }}.{{ master_ip_octet|int + item|int }}"
    name: "master-{{ item }}"
    ptr: "{{ master_ip_octet|int + item|int }}"
  set_fact:
    reverse_records: "{{ reverse_records|default([]) + [ {'hostname': name, 'ipaddr': ip, 'ptr_record': ptr} ] }}"
  with_sequence: start=0 end="{{ master_count|int - 1 }}" stride=1
  tags: [master_dns]

- name: set etcd nodes forward zone records
  vars:
    ip: "{{ ocp4_nat_gateway.split('.')[:3] | join('.') }}.{{ 10 + item|int }}"
    name: "etcd-{{ item }}"
    ptr: "{{ 10 + item|int }}"
  set_fact:
    records: "{{ records|default([]) + [ {'hostname': name, 'ipaddr': ip, 'ptr_record': ptr} ] }}"
  with_sequence: start=0 end="{{ master_count|int - 1 }}" stride=1
  tags: [etcd_dns]

- name: create compute nodes dns records
  block:
    - name: set compute nodes forward zone records
      vars:
        ip: "{{ ocp4_nat_gateway.split('.')[:3] | join('.') }}.{{ compute_ip_octet|int + item|int }}"
        name: "compute-{{ item }}"
        ptr: "{{ compute_ip_octet|int + item|int }}"
      set_fact:
        records: "{{ records|default([]) + [ {'hostname': name, 'ipaddr': ip, 'ptr_record': ptr} ] }}"
      with_sequence: start=0 end="{{ compute_node_count|int - 1 }}" stride=1
      tags: [worker_dns]
    
    - name: set compute nodes reverse zone records
      vars:
        ip: "{{ ocp4_nat_gateway.split('.')[:3] | join('.') }}.{{ compute_ip_octet|int + item|int }}"
        name: "compute-{{ item }}"
        ptr: "{{ compute_ip_octet|int + item|int }}"
      set_fact:
        reverse_records: "{{ reverse_records|default([]) + [ {'hostname': name, 'ipaddr': ip, 'ptr_record': ptr} ] }}"
      with_sequence: start=0 end="{{ compute_node_count|int - 1 }}" stride=1
      tags: [worker_dns]
  when: compute_count|int != 0

- name: set dns record state
  set_fact:
    record_state: "{{ 'absent' if dns_teardown|bool else 'present' }}"
  tags: [idm, worker_dns, master_dns, bootstrap_dns, api_dns, etcd_dns, wildcard_dns]

- name: create forward dns zone {{ idm_dns_forward_zone }}
  ipa_dnszone:
    state: "{{ record_state }}"
    zone_name: "{{ idm_dns_forward_zone }}"
    validate_certs: no
  tags: [idm, worker_dns, master_dns, bootstrap_dns, api_dns, etcd_dns, wildcard_dns]

- name: create reverse dns zone {{ idm_dns_reverse_zone }}
  ipa_dnszone:
    state: "{{ record_state }}"
    zone_name: "{{ idm_dns_reverse_zone }}"
    validate_certs: no
  tags: [idm, worker_dns, master_dns, bootstrap_dns, api_dns, etcd_dns, wildcard_dns]

- name: Create/Delete A Records
  ipa_dnsrecord:
    zone_name: "{{ idm_dns_forward_zone }}"
    record_name: "{{ item.hostname }}.{{ cluster_name }}"
    record_type: A
    record_value: "{{ item.ipaddr }}"
    state: "{{ record_state }}"
    validate_certs: no
  with_items: "{{ records }}"
  when: not dns_teardown|bool
  tags: [idm, worker_dns, master_dns, bootstrap_dns, api_dns, etcd_dns]

- name: Create/Delete PTR Records
  ipa_dnsrecord:
    zone_name: "{{ idm_dns_reverse_zone }}"
    record_name: "{{ item.ptr_record }}"
    record_type: PTR
    record_value: "{{ item.hostname }}.{{ cluster_name }}.{{ ocp4_cluster_domain }}."
    state: "{{ record_state }}"
    validate_certs: no
  with_items: "{{ reverse_records }}"
  when: not dns_teardown|bool
  tags: [idm, worker_dns, master_dns, bootstrap_dns, api_dns, etcd_dns]


- name: Generate IPA Session Cookie
  vars:
  uri:
    url: "https://{{ idm_server_fqdn }}/ipa/session/login_password"
    validate_certs: no
    method: POST
    status_code: 200
    headers:
      Content-Type: "application/x-www-form-urlencoded"
      Accept: "text/plain"
      Referer: "https://{{ idm_server_fqdn }}/ipa"
    body: "user={{ user_idm_admin }}&password={{ user_idm_password }}"
  register: ipa_session
  run_once: true
  when: not dns_teardown|bool
  tags: [idm, worker_dns, master_dns, bootstrap_dns, api_dns, etcd_dns, wildcard_dns]

- name: Create Wildcard for Applications
  uri:
    url: "https://{{ idm_server_fqdn }}/ipa/session/json"
    validate_certs: no
    method: POST
    status_code: 200
    headers:
      Cookie: "{{ ipa_session.set_cookie }}"
      Accept: "application/json"
      Referer: "https://{{ idm_server_fqdn }}/ipa"
    body:
      method: dnsrecord_add
      params:
      - - "{{ idm_dns_forward_zone }}"
        - "{{ dns_wildcard }}"
      - a_part_ip_address: "{{ kvm_host_ip }}"
        a_extra_create_reverse: false
    body_format: json
  when: not dns_teardown|bool
  tags: [wildcard_dns]

- name: Create SRV Records
  uri:
    url: "https://{{ idm_server_fqdn }}/ipa/session/json"
    validate_certs: no
    method: POST
    status_code: 200
    headers:
      Cookie: "{{ ipa_session.set_cookie }}"
      Accept: "application/json"
      Referer: "https://{{ idm_server_fqdn }}/ipa"
    body:
      method: dnsrecord_add
      params:
      - - "{{ idm_dns_forward_zone }}."
        - "_etcd-server-ssl._tcp.{{ cluster_name }}"
      - srv_part_priority: '0'
        srv_part_weight: '10'
        srv_part_port: '2380'
        srv_part_target: "{{ item }}.{{ cluster_name }}.{{ idm_dns_forward_zone }}."
    body_format: json
  when: not dns_teardown|bool
  with_items:
    - "etcd-0"
    - "etcd-1"
    - "etcd-2"
  tags: [etcd_dns]
