---
- name: Get the status of {{ webserver_directory }}
  stat:
    path: "{{ webserver_directory }}"
  register: webserver_dir
  tags: [rhcos_files, download, webserver ]

- name: Ensure the {{ webserver_directory }} exist
  file:
    path: "{{ webserver_directory }}"
    state: directory
    owner: "{{ local_user_account }}"
    group: "{{ local_user_account }}"
  register: create_webdir
  when: not webserver_dir.stat.exists
  tags: [rhcos_files, download, webserver ]

- name: Check the status on {{ virtinstall_dir }}
  stat:
    path: "{{ virtinstall_dir }}"
  register: virtinstall_directory
  tags: [rhcos_files, download, virtinstall, webserver ]

- name: Ensure {{ virtinstall_dir }} exit
  file:
    path: "{{ virtinstall_dir }}"
    state: directory
    owner: "{{ local_user_account }}"
    group: "{{ local_user_account }}"
  register: create_webdir
  when: not virtinstall_directory.stat.exists
  tags: [rhcos_files, download, virtinstall, webserver ]

- name: Ensure {{ ocp4_dependencies_version }} exit
  file:
    path: "{{ webserver_dependencies }}"
    state: directory
    owner: "{{ local_user_account }}"
    group: "{{ local_user_account }}"
  tags: [rhcos_files, download, webserver ]

- name: Ensure {{ webserver_images }} exist
  file:
    path: "{{ webserver_images }}"
    state: directory
    owner: "{{ local_user_account }}"
    group: "{{ local_user_account }}"
  tags: [rhcos_files, download, webserver ]

- name: Ensure {{ dest_ignitions_web_directory }} exit
  file:
    path: "{{ dest_ignitions_web_directory }}"
    state: directory
    owner: "{{ local_user_account }}"
    group: "{{ local_user_account }}"
  tags: [rhcos_files, download, ignitions, webserver ]

- name: Download RHCOS rootfs {{ coreos_rootfs }}
  get_url:
    url: "{{ openshift_mirror }}/{{ coreos_rootfs }}"
    dest: "{{ webserver_images }}/{{ coreos_rootfs }}"
    owner: "{{ local_user_account }}"
    group: "{{ local_user_account }}"
  register: rhcos_dependencies_dl
  notify:
    - restart {{ podman_webserver }}.service
  tags: [rhcos_files, download, ignition, webserver ]

#- name: Download RHCOS qcow {{ rhcos_qcow_image }}
#  get_url:
#    url: "{{ openshift_mirror }}/{{ rhcos_qcow_image }}"
#    dest: "{{ webserver_images }}/{{ rhcos_qcow_image }}"
#    owner: "{{ local_user_account }}"
#    group: "{{ local_user_account }}"
#  register: rhcos_qcow_dl
#  tags: [rhcos_files, download, ignition, webserver ]

- name: Download RHCOS initramfs and kernel image
  get_url:
    url: "{{ openshift_mirror }}/{{ item }}"
    dest: "{{ virtinstall_dir }}/{{ item }}"
    owner: "{{ local_user_account }}"
    group: "{{ local_user_account }}"
  loop:
    - "{{ coreos_installer_kernel }}"
    - "{{ coreos_installer_initramfs }}"
  loop_control:
    label: "{{ item }}"
  tags: [rhcos_files, download, ignition, webserver ]

- name: Get the status of the RHCOS ignition files
  stat:
    path: "{{ ignition_files_dir }}/{{ item }}.ign"
  loop: "{{ nodes_types }}"
  register: rhcos_igition_files_exist
  tags: [rhcos_files, download, ignition, webserver ]

- name: Check if ignition files are available under {{ ignition_files_dir }}
  fail:
    msg: One or more igition file does not exist! Please ensure the igition files have been created under {{ ignition_files_dir }}.
  with_items: "{{ rhcos_igition_files_exist.results }}"
  when: not item.stat.exists
  tags: [rhcos_files, download, ignition, webserver ]

- name: Copy ignition files to websrv pub dir {{ dest_ignitions_web_directory }}
  copy:
    src: "{{ ignition_files_dir }}/{{ item }}.ign"
    dest: "{{ dest_ignitions_web_directory }}/{{ item }}.ign"
    owner: "{{ local_user_account }}"
    group: "{{ local_user_account }}"
  loop: "{{ nodes_types }}"
  loop_control:
    label: "{{ item }}"
  register: rhcos_igition_files_cp
  notify:
    - restart {{ podman_webserver }}.service
  tags: [rhcos_files, download, ignition, webserver ]

- name: Apply new SELinux file context to {{ webserver_directory }}
  sefcontext:
    target: '"{{ webserver_directory }}(/.*)?"'
    setype: container_file_t
    state: present
  when: rhcos_igition_files_cp.changed or rhcos_dependencies_dl.changed
  tags: [rhcos_files, download, ignition, webserver ]

- name: run restorecon on {{ webserver_directory }}
  command: restorecon -RFv {{ webserver_directory }}
  when: rhcos_igition_files_cp.changed or rhcos_dependencies_dl.changed
  tags: [rhcos_files, download, ignition, webserver ]
